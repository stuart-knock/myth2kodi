#
# This is the user configuration file for myth2kodi. It should be placed in
# the myth2kodi working directory (typically: /home/<username>/.myth2kodi).
# See the 'm2kdir' user setting found in the myth2kodi script, NB 'm2kdir'
# cannot be set in this configuration file but must be set correctly in the
# myth2kodi script -- as it is used to find the myth2kodi.conf file.
#
# This file is 'source'd after default values are set in the script and so can
# be used to override those defaults. For any default values you wish to
# override, simply uncomment the variable below and modify its value to suit
# your needs.
#
# It is important to check that the values of paramaters flagged with:
#   '#<------THIS VALUE MUST BE SET-------'
# are set properly for your system.
#

##############################################################################
########################## BEGIN USER SETTINGS ###############################
##############################################################################

#Specify the name of the user running mythbackend, myth2kodi should always be
#run by that user. Default: 'mythtv'
#Librarian='mythtv'                           #<------THIS VALUE MUST BE SET-------


############################ Processing settings #############################

# There are 4 modes for the processing of a recording:
#   'MOVE' -- Move the recording. And, by default: create a symlink at RECORDING_PATH;
#   'LINK' -- Do not move, just create a symbolic 'LINK'; and
#   'COPY' -- Copy the recording to the target location.
#   'HARDLINK' -- Do not move, create a hard link.
#NOTE: The 'COPY' mode is primarily meant for supporting the copying of MythTV
#      recording files to removable media with nice human readable file names.
#      It is not yet intended or tested as a mode for generating a local Kodi
#      library. See, 'example_copy_to_removable_media_myth2kodi.conf' for an
#      example of temporarily enabling 'COPY' mode for this purpose.
#Options: ['MOVE'(DEFAULT)|'LINK'|'COPY'|'HARDLINK']
#PROCESS_RECORDING_MODE='MOVE'

#A modifier switch, relevant for PROCESS_RECORDING_MODE='MOVE'. With this
#setting 'Enabled' a link is created from the original MythTV recording file
#location to the file just moved into your Kodi library. This enables MythTV
#to continue tracking and maintain control of the recording.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#WARNING: 'Disabled' Mode removes MythTV-DB entry, SO CANNOT BE UNDONE.
#SYMLINK='Enabled'

#If TargetPathIsInputPath is Enabled, original dir will override MoveDir. This
#is useful for multiple recording dirs. TargetPathIsInputPath will separate
#generic shows from episodes and movies. Options: ['Enabled'|'Disabled'(DEFAULT)]
#TargetPathIsInputPath='Disabled'

#ShowStopper prevents generic shows from being processed. Generic shows are
#those recordings that have not been identified as either a movie or an episode
#of a tv-series (more specifically, continuing shows with entries in TheTVDB).
#This typically means things like news or sporting events.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#ShowStopper='Enabled'

#DIR_TRACKING_CLEANUP will check for and remove the folders created by myth2kodi
#Options: ['Enabled'(DEFAULT)|'Disabled']
#DIR_TRACKING_CLEANUP='Enabled'

#FailSafe mode will enable symlinks to be formed in FailSafeDir if the move or
#symlink operation fails. Options: Enabled|Disabled
#FailSafeMode='Disabled'

#The following four settings can Enable or Disable the mechanisms used used for
#identifying an episode. By default they are all 'Enabled' and should generally
#be left that way. Identification is done by comparing the data extracted from
#your MythTV-DB and provided at the command line against data downloaded from
#TheTVBD and TVmaze.

#MATCH_SEASON_EPISODE can be used to enable/disable attempting episode identification
#based on the season and episode numbers. The mechanism is an exact match against
#the "season" and "episode" field from the Guide data in MythTV-DB against the
#"airedSeason" and "airedEpisodeNumber"(TheTVDB) & "season" and "number"(tvmaze)
#fields for the series.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#MATCH_SEASON_EPISODE='Enabled'

#MATCH_SUBTITLE can be used to enable/disable attempting episode identification
#based on the episode title. The mechanism first tries an exact match using grep,
#failing that it then uses agrep to "fuzzy" match the "subtitle" field from the
#Guide data in MythTV-DB against the "episodeName"(TheTVDB) and "name"(tvmaze)
#fields for the series.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#MATCH_SUBTITLE='Enabled'

#MATCH_ORIGINALAIRDATE can be used to enable/disable attempting episode identification
#based on the original airdate for the episode. The mechanism tries an exact match
#of the "originalairdate" field from the Guide data in MythTV-DB against the
#"firstAired"(TheTVDB) and "airdate"(tvmaze) fields for the series.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#MATCH_ORIGINALAIRDATE='Enabled'

#MATCH_PLOT can be used to enable/disable attempting episode identification
#based on the episode plot. The mechanism uses agrep to fuzzy match the
#"description" field from the Guide data in MythTV-DB against the overview(TheTVDB)
#and summary(tvmaze) data for the series.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#MATCH_PLOT='Enabled'

#StorageGroupFallback can enable/disable a bit of code that, if Guide Data
#identified the input file as a show or episode, but no episode or series
#information was found, then it checks if the MythTV DB's storagegroup is
#movie[s] or film[s] and uses this to reset the recording type as Movie.
#To function it requires that you have created a MythTV storagegroup called
#something like 'Movies' and selected that storagegroup when making the rule
#for the recording. This works for my setup -- SAK.
#Options: ['Enabled'|'Disabled'(DEFAULT)]
#StorageGroupFallback='Disabled'

#CommercialMarkup will generate comskip files for recordings when they are moved.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#CommercialMarkup='Enabled'

#CommercialMarkupCleanup if "Enabled", when m2k_maintenance() is run, removes
#comskip & NFO files if the associated .mpg file cannot be found.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#CommercialMarkupCleanup='Enabled'

#Whether to track files and directories created by myth2kodi. This should always
#be 'Enabled' when performing ordinary processing to make MythTV recordings
#available to a Kodi library. It exists so we don't mess-up the tracking of
#myth2kodi's modifications to our Kodi library when we want to use myth2kodi
#with PROCESS_RECORDING_MODE='COPY' to put nicely named copies of our MythTV
#recordings on a removable media. See, 'example_copy_to_removable_media_myth2kodi.conf'.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#TRACKING='Enabled'

#A string to append to the "ShowFileName" before the suffix. Useful if you want
#to easily distinguish between recordings moved by myth2kodi and other media.
#For example, setting SHOW_FILE_NAME_APPEND=' - MYTH2KODI' will produce a
#processed recording name like 'ShowName S01E01 (EpisodeSubtitle) - MYTH2KODI.mpg'
#rather than the default which is like 'ShowName S01E01 (EpisodeSubtitle).mpg'.
#Default: ''
#SHOW_FILE_NAME_APPEND=''

# GROUP_BY_RECGROUP can be used to enable/disable the grouping of processed
# recordings by MythTV's recgroup property. When 'Enabled' the resulting target
# path is of the form: "$MoveDir/<recgroup>/ShowName/Season ..."; as opposed to
# the default('Disabled'): "$MoveDir/ShowName/Season ..."
#Options: ['Enabled'|'Disabled'(DEFAULT)]
#GROUP_BY_RECGROUP='Disabled'

#There are some checks in the script that prevent reprocessing a recording that
#we have already processed. Enabling this option skips those checks.
#Options: ['Enabled'|'Disabled'(DEFAULT)]
#FORCE_PROCESS='Disabled'

#The default version of agrep varies between distributions, with different
#versions recognising different flags/options. While myth2kodi tries to use an
#option set that works across as many variants as possible it can still have
#difficulty with the default agrep of some distributions. If agrep produces
#error messages when running myth2kodi, you can set an explicit path to a
#different version of agrep using this user-setting. For example, tre-agrep
#should work and is available as an alternative on most distributions.
#M2K_AGREP="$(command -v agrep)"


############################# Directory Settings #############################

#The directory where myth2kodi writes its temporary files, Default='/tmp'
#Typically, /tmp is tmpfs and so avoids unnecessary writes to disk. If you're
#on Linux and /tmp isn't tmpfs but you would rather avoid writing to disk then
#/dev/shm is guaranteed to be tmpfs. Alternatively, if you're short on RAM but
#don't mind some extra disk writes then use "$m2kdir". NOTE: When running with
#LOGLEVEL>=3, there are a number of temporary files that aren't automatically
#deleted, they will, however, be cleared as part of: myth2kodi --maintenance
#M2K_TMPDIR='/tmp'

#MoveDir is the folder which myth2kodi will move the file. No trailing / is
#accepted eg. "$HOME/videos"
#MoveDir='/media/video/tv'                    #<------THIS VALUE MUST BE SET-------

#AlternateMoveDir will act as a secondary MoveDir if the primary MoveDir fails.
#No trailing / is accepted eg. "$HOME/videos"
#AlternateMoveDir="$HOME/recordedTV"

#Primary Movie Dir. myth2kodi will attempt to move to this dir first. No
#trailing / is accepted eg. "$HOME/videos"
#PrimaryMovieDir='/media/video/movies'        #<------THIS VALUE MUST BE SET-------

#AlternateMovieDir is a fallback move dir if the primary movie dir fails.
#AlternateMovieDir="$HOME/recordedMovies"

#Primary Show Dir. myth2kodi will attempt to move to this dir first. No
#trailing / is accepted eg. "$HOME/videos"
#PrimaryShowDir='/media/video/recordedShows'  #<------THIS VALUE MUST BE SET-------

#AlternateMoveDir is a fallback move dir if the primary move dir fails
#AlternateShowDir="$HOME/recordedShows"

#FailSafeDir is used when the file cannot be moved to the MoveDir. FailSafe
#will not create folders. eg. /home/username
#FailSafeDir="$HOME/FailSafe"                 #<------THIS VALUE MUST BE SET-------


######################### myth2kodi Database Settings ########################

#Whether to look online (primarily: www.thetvdb.com) when trying to identify
#series and episodes. This should be 'Enabled' for typical use. It is intended...
#Options: ['Enabled'(DEFAULT)|'Disabled'].
#ONLINE_LOOKUP='Enabled'

#Language setting, used when accessing www.TheTVDB.com to build our local DB.
#Language='en'

#API key used to access www.TheTVDB.com. Default: '3B054E548E3F4FBE'
#APIkey='3B054E548E3F4FBE'

#Internet access Timeout in seconds, used for TheTVDB. Default: 50
#Timeout=50

#Update database time in seconds, Longer duration means faster processing time
#and less strain on TheTVDB. Default='88920' (1 day + eps)
#UpdateDatabase=264920


########################## MythTV Database Settings ##########################

#MythTV database access allows addition of movies, comskip data, and improves
#accuracy of episode recognition. Options: ['Enabled'(DEFAULT)|'Disabled']
#Database='Enabled'

#Database access method for MythTV-DB ['PythonBindings'(DEFAULT)|'MySQL']
#DATABASE_ACCESS='PythonBindings'

#MySQL Myth Database: Default: 'mythconverg'
#MySQLMythDb='mythconverg'

#Guide data type: SchedulesDirect currently covers DataDirect, MC2XML and others.
#SydFTA was written to handle the guide data transmitted by free-to-air digital
#channels in Sydney, Australia.
#Options: ['SchedulesDirect'|'SydFTA'(DEFAULT)]
#GuideDataType='SydFTA'

#The IP address or name of the server for MythTV Database (used in python bindings only)
#DBHostName='192.168.1.78'                    #<------THIS VALUE MUST BE SET-------

#MySQL User name: Default: 'mythtv'
#MySQLuser='mythtv'

#MySQL Password: Default: 'mythtv'
#MySQLpass='mythtv'                           #<------THIS VALUE MUST BE SET-------

#The Database Pin for the MythTV Database (used in python bindings only)
#DBPin=0000                                   #<------THIS VALUE MUST BE SET-------


########################## Reporting/Communications ##########################

#DailyReport provides a local log of shows added to your library per day.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#DailyReport='Enabled'

#Notify tells myth2kodi to send a notification to the Desktop via DBUS upon
#completion. Options: ['Enabled'|'Disabled'(DEFAULT)]
#Notify='Disabled'

#If notifications are enabled, desktop messages are sent to the user specified
#by NotifyUserName, Default: "$Librarian".
#  NOTE: if you want to specify a user other than $Librarian then $Librarian
#        must have passwordless sudo privileges otherwise the call to
#        m2k_notify will block, waiting for a password.
#NotifyUserName="$Librarian"

#Send a notification to KODI to Update library upon Successful move job.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#KODIUpdate='Enabled'

#Send a notification to KODI to cleanup the library upon Successful move job.
#Options: ['Enabled'|'Disabled'(DEFAULT)]
#KODIClean='Disabled'

#Send Notifications to KODI UI when the library is updated.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#KODINotify='Enabled'

#IP-Address and port for KODI Notifications. NOTE: If you've set username and
#password for remote access to kodi then you'll need to prepend user:password@
#to the ip addresses.
#Eg.KODIIPs=( '192.168.1.110:8080' 'user:password@192.168.1.111:8080' 'XBOX:8080' )
#KODIIPs=( '127.0.0.1:8080' )                 #<------THIS VALUE MUST BE SET-------

#Whether to create an RSS entry. The RSS can be given as a target for the
#RSS-ticker running across the bottom of the default Kodi interface. If enabled
#it will show a list of recent successfully processed recordings. See,
#    myth2kodi --config-help
#for more information on setting this up.
#Options: ['Enabled'(DEFAULT)|'Disabled']
#CREATE_RSS='Enabled'

#The directory to write the RSS file to when CREATE_RSS='Enabled'. The directory
#must exist and Librarian needs rwx permission to it.
#Default: '/var/www/myth2kodi-rss'
#RSS_DIRECTORY='/var/www/myth2kodi-rss'

#RSSmaxItems controls the number of items in the RSS. RSS Can be activated by
#creating a folder in /var/www/myth2kodi-rss. NOTE: setting this to 0 will
#essentially be ignored as generateRSS() considers it unset and defaults to 8.
#RSSmaxItems=8


############################ Maintenance Settings ############################

#How often (in seconds) to perform routine maintenance of tracked files.
#DEFAULT=259200 (72 hours)
#NOTE: Maintenance can be forced at any time using 'myth2kodi --maintenance'.
#MAINTENANCE_PERIOD=259200

#How long to persist archived myth2kodi database files in months, DEFAULT=6.
#M2K_DB_LIFE=6

#How long to persist daily report files in months, DEFAULT=12.
#DAILYREPORT_LIFE=12

#How long to persist archived log files in months. Log files older than this
#will be deleted during maintenance. Default: 6
#LOG_LIFE=6


############################## Logging Settings ##############################
#The settings below are for the bashlogging script which provides the configurable
#logging functionality used in myth2kodi.
#LOGLEVEL provides control over the amount of information myth2kodi reports.
#    0=Only Errors;
#    1=adds warnings;
#    2=adds more information;  --> DEFAULT
#    3=provides debugging output.
#Recommend 2 to start with or if you want to keep track of what myth2kodi is doing.
#Recommend 1 for usual operation, once you're confident that everything is working.
#Only use 3 if you have a particular problem that you're trying to track down,
#it significantly increases the output.
#LOGLEVEL=2

#LogFileName is the name of the log file, this will be placed in myth2kodi's
#working directory, $m2kdir set above, and have the suffix '.log' appended.
#DEFAULT: 'myth2kodi'. Resulting in: "/home/$Librarian/.myth2kodi/myth2kodi.log"
#NOTE: LOGFILE is overridden in special contexts, such as running Diagnostics.
#LogFileName='myth2kodi'

#LOGTYPE defines where to direct logging messages
#Options: ['filestderr'(DEFAULT)|'stderr'|'file']:
#NOTE: This is made read only within the bashlogging script.
#LOGTYPE='filestderr'

##############################################################################
######################### END USER SETTINGS ##################################
##############################################################################
